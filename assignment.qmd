---
title: "Joining Assignment"
author: "Avril Silva"
date: "`r format(Sys.time(), '%B %d, %Y')`"
format:
  html:
    self-contained: true
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Load libraries and establish settings

```{r}
options(scipen=999)
library(tidyverse)
library(janitor)
```

## Getting Started

This week we'll be combining and joining data to make it more useful and to ask some questions about it. We'll use Maryland 2022 primary election results to do this, and our main question will be this: Which precincts had the most votes cast at them statewide, counting both the Republican and Democratic primaries?

To answer this question, we'll need to first combine the two parties' primary precinct results into a single dataframe and then join it to data that has more information about each voting location.

First, load the two precinct results CSV files in the `data` folder, one each for the Democratic and Republican primaries, and then combine them into a single dataframe. You'll need to clean up the column names to make the data easier to work with - make sure you have loaded the library to do that.

Load the two datasets here:

```{r}
primary_dem <- read_csv("data/md_primary_precinct_dem.csv") %>% 
  mutate(`Election District - Precinct` = as.character(`Election District - Precinct`))

glimpse(primary_dem)

primary_rep <- read_csv("data/md_primary_precinct_rep.csv") %>% 
  mutate(`Election District - Precinct` = as.character(`Election District - Precinct`))
```

Now Combine (stack) the two dataframes into one combined dataframe, so all the records from both tables are in one place to use.

```{r}
all_primary <- bind_rows(primary_dem, primary_rep)

# For this, I tried to use the stack() command at first, but that did not quote work in this scenario. Instead,I used the bind_rows() command to combine the two. I also went and renamed this binding to see the data in its own data set.





```

Then use janitor's clean_names() function to clean up the column names so all spaces, punctuation and letter cases are dealt with.

To use clean_names() you apply it to your dataframe like:

`data <- data %>%`

`clean_names()`

```{r}

all_primary <- all_primary %>% 
  clean_names()

# Using the commands, I simply combined the commands in order to use the clean_names() command and clean up the columns. 

```

Next, let's read in the precinct voting location data and clean up the column names:

```{r}
precinct_voting_locations <- read_csv('data/precinct_voting_locations.csv') %>%
                                clean_names()

```

Next use left_join() to join the two tables based on the unique combination of precinct and county. When joining on two sets of columns, you'll use the `by =` argument in your join function along with the `c()`, like this:

`by = c("firstcolumn_table1" = "firstcolumn_table2", "secondcolumn_table1" = "secondcolumn_table2"))`

```{r}


my_data <- left_join(precinct_voting_locations, all_primary, by=c("precinct_code" = "election_district_precinct", "county_code" = "county"))



```

## Answer questions

### Q1.

Write code to produce a `votes` column which is the result of adding together `early_votes`, `election_night_votes`, `provisional_votes` and the mail-in votes, overwriting your dataframe so that it now has that `total_votes` column permanently.

```{r}

new_data <- my_data %>% 
  mutate(my_data, total_votes = early_votes + election_night_votes + mail_in_ballot_1_votes + mail_in_ballot_2_votes + provisional_votes)

# Although a little clunky, it helped for me to see all of the variables added together in order to make the new column using the mutate() function.  

```

Next, separately write code to show each county and precinct and calculate the total votes in the Governor's race - bearing in mind that each precinct will have multiple rows in the dataframe, but you only want to see one row for each precinct. (So you'll want to use grouping and summarizing.)

```{r}

new_data %>% 
  group_by(precinct_code) %>%
  summarise(total_votes = sum(total_votes)) %>% 
  arrange(desc(total_votes))


# This one took a bit of finagling, but in the end I had to go back and make a new data set that included the total_votes column and then made sure to group it by the precinct since there are multiple precincts in a county and we only want to see one. 


```

What is the name and voting location of the precinct that saw the most votes in the governor's race? *Precinct: 1001 Name: LINTHICUM ES Location:101 SCHOOL LANE, LINTHICUM, MD, 21090*

### Q2.

Let's look at the average number of votes in each party's primary race for governor. Take the code you wrote for the last part of Q2, save the results to a new variable and then find the precincts with 0 total votes for governor.

```{r}

new_data %>% 
  filter(office_name == "Governor / Lt. Governor") %>% 
  group_by(precinct_code) %>%
  summarise(total_votes = sum(total_votes)) %>% 
  arrange(total_votes)

# In order to solve this, I first needed to filter out the voted for simply the governor race and then apply the same voting code that I had done prior. In doing so, I found that the 19005 and 20017 precincts had no votes for governor. 

new_data %>%
  group_by(county_name) %>%
  summarise(precincts = n_distinct(precinct_code)) %>% 
  arrange(desc(precincts))

# This one took me the longest. It took me too long to figure out because I did a lot of different combinations before landing on the exact one I needed. 
  

```

How many precincts are there, and which county has the most? *There are 759 different precincts and Prince George's County has the most precincts*

What else would you need to know about these precincts to know whether this might be worth a story? *It would be good to know about the different demographics found in these counties that has them splitting up into so many different districts and if there is some gerrymandering or redistricting involved to make things more favorable for one group over the other.*

### Q3.

Choose your own adventure: I want you to come up with a question you could ask of one of the dataframes we've created for this lab. It could involve candidates, or counties or types of voting, but it cannot be a variation of a previous question (so, for example, you can't ask, "What's the average number of votes per precinct in the U.S. Senate primary?").

First write the question and then try to answer it by writing code. If you're not sure of the exact code at a minimum, describe what you think you'd have to do to answer it and what the results would look like.

```{r}

# My Question: Out of the all of the primaries, what percentage of the votes was for the democratic primaries? 

new_data %>%
  group_by(party) %>% 
  summarise(votes_for_each_party = sum(total_votes))

# In addition to the code I have attached, I would need to add a different column to automatically figure out the percentage of the votes from each primary rather than having to add it myself. Nevertheless, you can still find using this table that the democratic primary votes made up 74% of the total votes of all of the primaries. 


```
